/*
Given a 32-bit signed integer, reverse digits of an integer.
Example 1:
Input: 123
Output: 321

Example 2:
Input: -123
Output: -321

Example 3:
Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer 
range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer 
overflows.
*/

/*reminder:
1.pay attention to the overflow problem,judge the number when it about to close to the limit.
2.use flag to mark if number is negative or positive 
*/

int reverse(int x) {
 int i = 0;
    int k = 0;
    int flag = 1;
    if(x <= -2147483648)
       return 0;
    if(x < 0)
    {
     x = -x;
    flag = -1;
    }
    while(x != 0)
        {
           if(k >= 8 && i*10.0 + x % 10 > 2147483647)
              return 0;
           i = i * 10 + x % 10;
            x /= 10;
           k++; 
        }
   

    return flag * i;

}
