/*
The Hamming distance between two integers is the number of positions at which the corresponding bits are different.
Given two integers x and y, calculate the Hamming distance.
Note:
0 ≤ x, y < 231.

Example:
Input: x = 1, y = 4
Output: 2
Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑
The above arrows point to positions where the corresponding bits are different.
*/

/*reminder:
1.while(x||y) not (x && y) because if the bits are 0 it will jump out of the circle
2.((x)^(y)) don't froget the out layer () because of the privilidge of & is higher
3.count += 1 & ((x)^(y)); means if there is difference between one bit of x and y, the ^ will be 1, 1 & 1 = 1,count++
*/

int hammingDistance(int x, int y) {
    int t;
    int count = 0;
    while(x||y)
    {
       count += 1 & ((x)^(y));
       x = x >> 1;
       y = y >> 1;
    }
    return count;
}
