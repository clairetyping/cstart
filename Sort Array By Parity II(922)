/*Given an array A of non-negative integers, half of the integers in A are odd, and half of the integers are even.
Sort the array so that whenever A[i] is odd, i is odd; and whenever A[i] is even, i is even.
You may return any answer array that satisfies this condition.

Example 1:
Input: [4,2,5,7]
Output: [4,5,2,7]
Explanation: [4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.
*/

/*reminder:
1.find the number that does not fit its Subscript
*/

int* sortArrayByParityII(int* a, int n,int* returnSize) {
    int i = 0;
    int temp;
    int* p = (int *)malloc(sizeof(int)*n);
    for(i = 0; i < n; i++)
    {
      if(a[i] % 2 != i % 2)
      {
         for(int j = i+1;j < n; j++){
             if(a[j] % 2!= j % 2 && i % 2 == a[j] % 2){
                 temp = a[j];
                 a[j] = a[i];
                 a[i] = temp;
             }
             p[i] = a[i];
            
         }   
      }else{
          p[i] = a[i];
      }
    }
    
    *returnSize = n;
    return p;
}


